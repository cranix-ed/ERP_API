const axios = require('axios')
const { sql, pool, poolConnect } = require('../../../config/dbNhaCungCap')

// L·∫•y t·∫•t c·∫£ nh√¢n vi√™n
const getAllNhanVien = async () => {
	await poolConnect
	const result = await pool.request().query(`
    SELECT MaNV, HoTen, GioiTinh, NgaySinh, DiaChi, SoCMND, MaChucVu, MaPhong, STK, NganHang
    FROM NhanVien
  `)
	return result.recordset
}

// L·∫•y nh√¢n vi√™n theo ID
const getNhanVienById = async (id) => {
	await poolConnect
	const result = await pool
		.request()
		.input('MaNV', sql.Int, id)
		.query('SELECT * FROM NhanVien WHERE MaNV = @MaNV')
	return result.recordset[0]
}

// Th√™m nh√¢n vi√™n m·ªõi
const createNhanVien = async (data) => {
	const {
		HoTen,
		GioiTinh,
		NgaySinh,
		DiaChi,
		SoCMND,
		MaChucVu,
		MaPhong,
		STK,
		NganHang,
	} = data
	await poolConnect
	const result = await pool
		.request()
		.input('HoTen', sql.NVarChar(100), HoTen)
		.input('GioiTinh', sql.NVarChar(10), GioiTinh)
		.input('NgaySinh', sql.Date, NgaySinh)
		.input('DiaChi', sql.NVarChar(200), DiaChi)
		.input('SoCMND', sql.NVarChar(20), SoCMND)
		.input('MaChucVu', sql.Int, MaChucVu)
		.input('MaPhong', sql.Int, MaPhong)
		.input('STK', sql.NVarChar(50), STK)
		.input('NganHang', sql.NVarChar(100), NganHang).query(`
      INSERT INTO NhanVien (HoTen, GioiTinh, NgaySinh, DiaChi, SoCMND, MaChucVu, MaPhong, STK, NganHang)
      OUTPUT inserted.MaNV
      VALUES (@HoTen, @GioiTinh, @NgaySinh, @DiaChi, @SoCMND, @MaChucVu, @MaPhong, @STK, @NganHang)
    `)

	const newNhanVien = { ...data, MaNV: result.recordset[0].MaNV }

	// G·ªçi API ƒë·ªìng b·ªô sang Nh√¢n S·ª±
	try {
		if (!data.fromSync) {
			await axios.post(
				'http://localhost:9717/systemNhanSu/nhanviensync/sync',
				{
					data: { ...newNhanVien, LoaiNV: 'nhacungcap' },
				}
			)
		}
		console.log('Sync th√†nh c√¥ng')
	} catch (error) {
		console.error('Sync Nh√¢n S·ª± th·∫•t b·∫°i:', error.message)
	}

	return {
		message: 'Th√™m nh√¢n vi√™n th√†nh c√¥ng',
		MaNV: newNhanVien.MaNV,
	}
}

// C·∫≠p nh·∫≠t th√¥ng tin nh√¢n vi√™n
const updateNhanVien = async (id, data) => {
	const {
		HoTen,
		GioiTinh,
		NgaySinh,
		DiaChi,
		SoCMND,
		MaChucVu,
		MaPhong,
		STK,
		NganHang,
	} = data
	await poolConnect
	await pool
		.request()
		.input('MaNV', sql.Int, id)
		.input('HoTen', sql.NVarChar(100), HoTen)
		.input('GioiTinh', sql.NVarChar(10), GioiTinh)
		.input('NgaySinh', sql.Date, NgaySinh)
		.input('DiaChi', sql.NVarChar(200), DiaChi)
		.input('SoCMND', sql.NVarChar(20), SoCMND)
		.input('MaChucVu', sql.Int, MaChucVu)
		.input('MaPhong', sql.Int, MaPhong)
		.input('STK', sql.NVarChar(50), STK)
		.input('NganHang', sql.NVarChar(100), NganHang).query(`
      UPDATE NhanVien
      SET HoTen = @HoTen,
          GioiTinh = @GioiTinh,
          NgaySinh = @NgaySinh,
          DiaChi = @DiaChi,
          SoCMND = @SoCMND,
          MaChucVu = @MaChucVu,
          MaPhong = @MaPhong,
          STK = @STK,
          NganHang = @NganHang
      WHERE MaNV = @MaNV
    `)

	// üîÑ G·ªçi API sync
	try {
		if (!data.fromSync) {
			await axios.post(
				'http://localhost:9717/systemNhanSu/nhanviensync/sync',
				{
					data: { ...data, LoaiNV: 'nhacungcap' },
				}
			)
		}
		console.log('Sync th√†nh c√¥ng')
	} catch (error) {
		console.error('Sync Nh√¢n S·ª± th·∫•t b·∫°i:', error.message)
	}

	return { message: 'C·∫≠p nh·∫≠t nh√¢n vi√™n th√†nh c√¥ng' }
}

// X√≥a nh√¢n vi√™n
const deleteNhanVien = async (id) => {
	await poolConnect
	await pool
		.request()
		.input('MaNV', sql.Int, id)
		.query('DELETE FROM NhanVien WHERE MaNV = @MaNV')
	return { message: 'X√≥a nh√¢n vi√™n th√†nh c√¥ng' }
}

module.exports = {
	getAllNhanVien,
	getNhanVienById,
	createNhanVien,
	updateNhanVien,
	deleteNhanVien,
}
